[buildout]
parts =
    zope2
    productdistros
    instance
    zopepy
    omelette
    pydev
    roadrunner
    test

# Change the number here to change the version of Plone being used
extends = http://dist.plone.org/release/3.2.3/versions.cfg
versions = versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/3.2.3

# Add additional eggs here
eggs =
    collective.amberjack.core
    collective.amberjack.portlet
    collective.amberjack.metatour
    collective.amberjack.plonetour
    plone.reload
    plone.registry

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
    src/collective.amberjack.core
    src/collective.amberjack.portlet
    src/collective.amberjack.metatour
    src/collective.amberjack.plonetour

[versions]
plone.app.locales = 3.3.3
zc.buildout = 1.3.1
zc.recipe.egg = 1.2.2
zope.testing = 3.8.1

[zope2]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2install
recipe = plone.recipe.zope2install
url = ${versions:zope2-url}

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.distros
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[instance]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
#debug-mode = on
#verbose-security = on

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = Plone my.package
eggs =
    Plone
    ${buildout:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    collective.amberjack.core
    collective.amberjack.portlet
    collective.amberjack.metatour
    collective.amberjack.plonetour
    plone.reload
    plone.registry

products =
    ${buildout:directory}/products
    ${productdistros:location}

[zopepy]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
products =
    ${instance:products}

# Automatically add eggs to PyDev project path
[pydev]
recipe = pb.recipes.pydev
pydevproject_path = ${buildout:directory}/.pydevproject
eggs = ${instance:eggs}
extra_paths = ${zope2:location}/lib/python/

[roadrunner]
recipe = roadrunner:plone
packages-under-test = 
    collective.amberjack.core
    collective.amberjack.metatour
    collective.amberjack.plonetour
    collective.amberjack.portlet

[test]
recipe = zc.recipe.testrunner
eggs = 
    collective.amberjack.core
    collective.amberjack.metatour
    collective.amberjack.plonetour
    collective.amberjack.portlet
extra-paths = ${zope2:location}/lib/python
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']


